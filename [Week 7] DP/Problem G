#include <iostream>
#include <cstring>
#include <vector>
#include <algorithm>

using namespace std;
int main() {
	int t;
	cin >> t;
	while(t--){
		string s;
		cin >> s;
		int n= s.size();
		s = '0' + s;
		bool dp[n + 1][n + 1];
		memset(dp, false, sizeof(dp));
		for (int i = 1; i <= n; i++){
			dp[i][i] = true;
		}
		int ans = 1;
		for (int l = 2; l <= n; l++){
			for (int i = 1; i <= n - l + 1; i++){
				int j = i + l - 1;
				if (l == 2 && s[i] == s[j]) dp[i][j] = true;
				else {
					dp[i][j] = dp[i + 1][j - 1] && (s[i] == s[j]);
				}
				if (dp[i][j]) ans = max(ans, l);
			}
		}
		cout << ans << "\n";
	}
    return 0;
}
